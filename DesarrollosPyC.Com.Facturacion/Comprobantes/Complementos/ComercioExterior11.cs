// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.2.0.72
//    <NameSpace>DesarrollosPyC.Com.Facturacion</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>None</InitializeFields><GenerateUnusedComplexTypes>False</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>False</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>None</PropNameSpecified><PrivateFieldName>StartWithUnderscore</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>False</EnableExternalSchemasCache><EnableDebug>False</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>False</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>False</CleanupCode><EnableXmlSerialization>True</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings></CustomUsings><AttributesToExlude></AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace DesarrollosPyC.Com.Facturacion.Comprobantes.Complementos
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.IO;
    using System.Text;
    using System.Xml;
    using System.Collections.Generic;
    using Catalogos;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.sat.gob.mx/ComercioExterior11", IsNullable=false)]
    public partial class ComercioExterior
    {
        
        #region Private fields
        private ComercioExteriorEmisor _emisor;
        
        private List<ComercioExteriorPropietario> _propietario;
        
        private ComercioExteriorReceptor _receptor;
        
        private List<ComercioExteriorDestinatario> _destinatario;
        
        private List<ComercioExteriorMercancia> _mercancias;
        
        private string _version;
        
        private c_MotivoTraslado _motivoTraslado;
        
        private c_TipoOperacion _tipoOperacion;
        
        private c_ClavePedimento _claveDePedimento;
        
        private int _certificadoOrigen;
        
        private string _numCertificadoOrigen;
        
        private string _numeroExportadorConfiable;
        
        private c_INCOTERM _incoterm;
        
        private int _subdivision;
        
        private string _observaciones;
        
        private decimal _tipoCambioUSD;
        
        private decimal _totalUSD;
        
        private static XmlSerializer serializer;
        #endregion
        
        public ComercioExterior()
        {
            this._version = "1.1";
        }
        
        public ComercioExteriorEmisor Emisor
        {
            get
            {
                return this._emisor;
            }
            set
            {
                this._emisor = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Propietario")]
        public List<ComercioExteriorPropietario> Propietario
        {
            get
            {
                return this._propietario;
            }
            set
            {
                this._propietario = value;
            }
        }
        
        public ComercioExteriorReceptor Receptor
        {
            get
            {
                return this._receptor;
            }
            set
            {
                this._receptor = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Destinatario")]
        public List<ComercioExteriorDestinatario> Destinatario
        {
            get
            {
                return this._destinatario;
            }
            set
            {
                this._destinatario = value;
            }
        }
        
        [System.Xml.Serialization.XmlArrayItemAttribute("Mercancia", IsNullable=false)]
        public List<ComercioExteriorMercancia> Mercancias
        {
            get
            {
                return this._mercancias;
            }
            set
            {
                this._mercancias = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version
        {
            get
            {
                return this._version;
            }
            set
            {
                this._version = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_MotivoTraslado MotivoTraslado
        {
            get
            {
                return this._motivoTraslado;
            }
            set
            {
                this._motivoTraslado = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_TipoOperacion TipoOperacion
        {
            get
            {
                return this._tipoOperacion;
            }
            set
            {
                this._tipoOperacion = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_ClavePedimento ClaveDePedimento
        {
            get
            {
                return this._claveDePedimento;
            }
            set
            {
                this._claveDePedimento = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int CertificadoOrigen
        {
            get
            {
                return this._certificadoOrigen;
            }
            set
            {
                this._certificadoOrigen = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumCertificadoOrigen
        {
            get
            {
                return this._numCertificadoOrigen;
            }
            set
            {
                this._numCertificadoOrigen = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroExportadorConfiable
        {
            get
            {
                return this._numeroExportadorConfiable;
            }
            set
            {
                this._numeroExportadorConfiable = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_INCOTERM Incoterm
        {
            get
            {
                return this._incoterm;
            }
            set
            {
                this._incoterm = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Subdivision
        {
            get
            {
                return this._subdivision;
            }
            set
            {
                this._subdivision = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Observaciones
        {
            get
            {
                return this._observaciones;
            }
            set
            {
                this._observaciones = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TipoCambioUSD
        {
            get
            {
                return this._tipoCambioUSD;
            }
            set
            {
                this._tipoCambioUSD = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal TotalUSD
        {
            get
            {
                return this._totalUSD;
            }
            set
            {
                this._totalUSD = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExterior));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExterior object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExterior object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExterior object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExterior obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExterior);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExterior obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExterior Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExterior)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExterior Deserialize(System.IO.Stream s)
        {
            return ((ComercioExterior)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExterior object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExterior object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExterior object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExterior obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExterior);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExterior obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExterior LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorEmisor
    {
        
        #region Private fields
        private ComercioExteriorEmisorDomicilio _domicilio;
        
        private string _curp;
        
        private static XmlSerializer serializer;
        #endregion
        
        public ComercioExteriorEmisorDomicilio Domicilio
        {
            get
            {
                return this._domicilio;
            }
            set
            {
                this._domicilio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Curp
        {
            get
            {
                return this._curp;
            }
            set
            {
                this._curp = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorEmisor));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorEmisor object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorEmisor object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorEmisor object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorEmisor obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorEmisor);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorEmisor obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorEmisor Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorEmisor)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorEmisor Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorEmisor)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorEmisor object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorEmisor object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorEmisor object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorEmisor obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorEmisor);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorEmisor obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorEmisor LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorEmisorDomicilio
    {
        
        #region Private fields
        private string _calle;
        
        private string _numeroExterior;
        
        private string _numeroInterior;
        
        private c_Colonia _colonia;
        
        private c_Localidad _localidad;
        
        private string _referencia;
        
        private c_Municipio _municipio;
        
        private c_Estado _estado;
        
        private c_Pais _pais;
        
        private c_CodigoPostal _codigoPostal;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Calle
        {
            get
            {
                return this._calle;
            }
            set
            {
                this._calle = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroExterior
        {
            get
            {
                return this._numeroExterior;
            }
            set
            {
                this._numeroExterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroInterior
        {
            get
            {
                return this._numeroInterior;
            }
            set
            {
                this._numeroInterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Colonia Colonia
        {
            get
            {
                return this._colonia;
            }
            set
            {
                this._colonia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Localidad Localidad
        {
            get
            {
                return this._localidad;
            }
            set
            {
                this._localidad = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Referencia
        {
            get
            {
                return this._referencia;
            }
            set
            {
                this._referencia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Municipio Municipio
        {
            get
            {
                return this._municipio;
            }
            set
            {
                this._municipio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Estado Estado
        {
            get
            {
                return this._estado;
            }
            set
            {
                this._estado = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Pais Pais
        {
            get
            {
                return this._pais;
            }
            set
            {
                this._pais = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_CodigoPostal CodigoPostal
        {
            get
            {
                return this._codigoPostal;
            }
            set
            {
                this._codigoPostal = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorEmisorDomicilio));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorEmisorDomicilio object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorEmisorDomicilio object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorEmisorDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorEmisorDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorEmisorDomicilio);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorEmisorDomicilio obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorEmisorDomicilio Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorEmisorDomicilio)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorEmisorDomicilio Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorEmisorDomicilio)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorEmisorDomicilio object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorEmisorDomicilio object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorEmisorDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorEmisorDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorEmisorDomicilio);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorEmisorDomicilio obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorEmisorDomicilio LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
	
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorPropietario
    {
        
        #region Private fields
        private string _numRegIdTrib;
        
        private c_Pais _residenciaFiscal;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumRegIdTrib
        {
            get
            {
                return this._numRegIdTrib;
            }
            set
            {
                this._numRegIdTrib = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Pais ResidenciaFiscal
        {
            get
            {
                return this._residenciaFiscal;
            }
            set
            {
                this._residenciaFiscal = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorPropietario));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorPropietario object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorPropietario object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorPropietario object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorPropietario obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorPropietario);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorPropietario obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorPropietario Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorPropietario)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorPropietario Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorPropietario)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorPropietario object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorPropietario object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorPropietario object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorPropietario obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorPropietario);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorPropietario obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorPropietario LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorReceptor
    {
        
        #region Private fields
        private ComercioExteriorReceptorDomicilio _domicilio;
        
        private string _numRegIdTrib;
        
        private static XmlSerializer serializer;
        #endregion
        
        public ComercioExteriorReceptorDomicilio Domicilio
        {
            get
            {
                return this._domicilio;
            }
            set
            {
                this._domicilio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumRegIdTrib
        {
            get
            {
                return this._numRegIdTrib;
            }
            set
            {
                this._numRegIdTrib = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorReceptor));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorReceptor object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorReceptor object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorReceptor object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorReceptor obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorReceptor);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorReceptor obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorReceptor Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorReceptor)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorReceptor Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorReceptor)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorReceptor object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorReceptor object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorReceptor object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorReceptor obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorReceptor);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorReceptor obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorReceptor LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorReceptorDomicilio
    {
        
        #region Private fields
        private string _calle;
        
        private string _numeroExterior;
        
        private string _numeroInterior;
        
        private string _colonia;
        
        private string _localidad;
        
        private string _referencia;
        
        private string _municipio;
        
        private string _estado;
        
        private c_Pais _pais;
        
        private string _codigoPostal;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Calle
        {
            get
            {
                return this._calle;
            }
            set
            {
                this._calle = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroExterior
        {
            get
            {
                return this._numeroExterior;
            }
            set
            {
                this._numeroExterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroInterior
        {
            get
            {
                return this._numeroInterior;
            }
            set
            {
                this._numeroInterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Colonia
        {
            get
            {
                return this._colonia;
            }
            set
            {
                this._colonia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Localidad
        {
            get
            {
                return this._localidad;
            }
            set
            {
                this._localidad = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Referencia
        {
            get
            {
                return this._referencia;
            }
            set
            {
                this._referencia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Municipio
        {
            get
            {
                return this._municipio;
            }
            set
            {
                this._municipio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Estado
        {
            get
            {
                return this._estado;
            }
            set
            {
                this._estado = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Pais Pais
        {
            get
            {
                return this._pais;
            }
            set
            {
                this._pais = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodigoPostal
        {
            get
            {
                return this._codigoPostal;
            }
            set
            {
                this._codigoPostal = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorReceptorDomicilio));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorReceptorDomicilio object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorReceptorDomicilio object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorReceptorDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorReceptorDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorReceptorDomicilio);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorReceptorDomicilio obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorReceptorDomicilio Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorReceptorDomicilio)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorReceptorDomicilio Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorReceptorDomicilio)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorReceptorDomicilio object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorReceptorDomicilio object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorReceptorDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorReceptorDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorReceptorDomicilio);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorReceptorDomicilio obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorReceptorDomicilio LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorDestinatario
    {
        
        #region Private fields
        private List<ComercioExteriorDestinatarioDomicilio> _domicilio;
        
        private string _numRegIdTrib;
        
        private string _nombre;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlElementAttribute("Domicilio")]
        public List<ComercioExteriorDestinatarioDomicilio> Domicilio
        {
            get
            {
                return this._domicilio;
            }
            set
            {
                this._domicilio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumRegIdTrib
        {
            get
            {
                return this._numRegIdTrib;
            }
            set
            {
                this._numRegIdTrib = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Nombre
        {
            get
            {
                return this._nombre;
            }
            set
            {
                this._nombre = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorDestinatario));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorDestinatario object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorDestinatario object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorDestinatario object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorDestinatario obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorDestinatario);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorDestinatario obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorDestinatario Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorDestinatario)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorDestinatario Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorDestinatario)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorDestinatario object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorDestinatario object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorDestinatario object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorDestinatario obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorDestinatario);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorDestinatario obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorDestinatario LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorDestinatarioDomicilio
    {
        
        #region Private fields
        private string _calle;
        
        private string _numeroExterior;
        
        private string _numeroInterior;
        
        private string _colonia;
        
        private string _localidad;
        
        private string _referencia;
        
        private string _municipio;
        
        private string _estado;
        
        private c_Pais _pais;
        
        private string _codigoPostal;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Calle
        {
            get
            {
                return this._calle;
            }
            set
            {
                this._calle = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroExterior
        {
            get
            {
                return this._numeroExterior;
            }
            set
            {
                this._numeroExterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroInterior
        {
            get
            {
                return this._numeroInterior;
            }
            set
            {
                this._numeroInterior = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Colonia
        {
            get
            {
                return this._colonia;
            }
            set
            {
                this._colonia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Localidad
        {
            get
            {
                return this._localidad;
            }
            set
            {
                this._localidad = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Referencia
        {
            get
            {
                return this._referencia;
            }
            set
            {
                this._referencia = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Municipio
        {
            get
            {
                return this._municipio;
            }
            set
            {
                this._municipio = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Estado
        {
            get
            {
                return this._estado;
            }
            set
            {
                this._estado = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_Pais Pais
        {
            get
            {
                return this._pais;
            }
            set
            {
                this._pais = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CodigoPostal
        {
            get
            {
                return this._codigoPostal;
            }
            set
            {
                this._codigoPostal = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorDestinatarioDomicilio));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorDestinatarioDomicilio object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorDestinatarioDomicilio object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorDestinatarioDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorDestinatarioDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorDestinatarioDomicilio);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorDestinatarioDomicilio obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorDestinatarioDomicilio Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorDestinatarioDomicilio)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorDestinatarioDomicilio Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorDestinatarioDomicilio)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorDestinatarioDomicilio object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorDestinatarioDomicilio object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorDestinatarioDomicilio object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorDestinatarioDomicilio obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorDestinatarioDomicilio);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorDestinatarioDomicilio obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorDestinatarioDomicilio LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorMercancia
    {
        
        #region Private fields
        private List<ComercioExteriorMercanciaDescripcionesEspecificas> _descripcionesEspecificas;
        
        private string _noIdentificacion;
        
        private c_FraccionArancelaria _fraccionArancelaria;
        
        private decimal _cantidadAduana;
        
        private c_UnidadAduana _unidadAduana;
        
        private decimal _valorUnitarioAduana;
        
        private decimal _valorDolares;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlElementAttribute("DescripcionesEspecificas")]
        public List<ComercioExteriorMercanciaDescripcionesEspecificas> DescripcionesEspecificas
        {
            get
            {
                return this._descripcionesEspecificas;
            }
            set
            {
                this._descripcionesEspecificas = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NoIdentificacion
        {
            get
            {
                return this._noIdentificacion;
            }
            set
            {
                this._noIdentificacion = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_FraccionArancelaria FraccionArancelaria
        {
            get
            {
                return this._fraccionArancelaria;
            }
            set
            {
                this._fraccionArancelaria = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal CantidadAduana
        {
            get
            {
                return this._cantidadAduana;
            }
            set
            {
                this._cantidadAduana = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public c_UnidadAduana UnidadAduana
        {
            get
            {
                return this._unidadAduana;
            }
            set
            {
                this._unidadAduana = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ValorUnitarioAduana
        {
            get
            {
                return this._valorUnitarioAduana;
            }
            set
            {
                this._valorUnitarioAduana = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal ValorDolares
        {
            get
            {
                return this._valorDolares;
            }
            set
            {
                this._valorDolares = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorMercancia));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorMercancia object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorMercancia object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorMercancia object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorMercancia obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorMercancia);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorMercancia obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorMercancia Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorMercancia)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorMercancia Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorMercancia)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorMercancia object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorMercancia object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorMercancia object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorMercancia obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorMercancia);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorMercancia obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorMercancia LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sat.gob.mx/ComercioExterior11")]
    public partial class ComercioExteriorMercanciaDescripcionesEspecificas
    {
        
        #region Private fields
        private string _marca;
        
        private string _modelo;
        
        private string _subModelo;
        
        private string _numeroSerie;
        
        private static XmlSerializer serializer;
        #endregion
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Marca
        {
            get
            {
                return this._marca;
            }
            set
            {
                this._marca = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Modelo
        {
            get
            {
                return this._modelo;
            }
            set
            {
                this._modelo = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubModelo
        {
            get
            {
                return this._subModelo;
            }
            set
            {
                this._subModelo = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string NumeroSerie
        {
            get
            {
                return this._numeroSerie;
            }
            set
            {
                this._numeroSerie = value;
            }
        }
        
        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializerFactory().CreateSerializer(typeof(ComercioExteriorMercanciaDescripcionesEspecificas));
                }
                return serializer;
            }
        }
        
        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current ComercioExteriorMercanciaDescripcionesEspecificas object into an XML string
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes workflow markup into an ComercioExteriorMercanciaDescripcionesEspecificas object
        /// </summary>
        /// <param name="input">string workflow markup to deserialize</param>
        /// <param name="obj">Output ComercioExteriorMercanciaDescripcionesEspecificas object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string input, out ComercioExteriorMercanciaDescripcionesEspecificas obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorMercanciaDescripcionesEspecificas);
            try
            {
                obj = Deserialize(input);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool Deserialize(string input, out ComercioExteriorMercanciaDescripcionesEspecificas obj)
        {
            System.Exception exception = null;
            return Deserialize(input, out obj, out exception);
        }
        
        public static ComercioExteriorMercanciaDescripcionesEspecificas Deserialize(string input)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(input);
                return ((ComercioExteriorMercanciaDescripcionesEspecificas)(Serializer.Deserialize(XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }
        
        public static ComercioExteriorMercanciaDescripcionesEspecificas Deserialize(System.IO.Stream s)
        {
            return ((ComercioExteriorMercanciaDescripcionesEspecificas)(Serializer.Deserialize(s)));
        }
        #endregion
        
        /// <summary>
        /// Serializes current ComercioExteriorMercanciaDescripcionesEspecificas object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }
        
        public virtual void SaveToFile(string fileName)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                System.IO.FileInfo xmlFile = new System.IO.FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }
        
        /// <summary>
        /// Deserializes xml markup from file into an ComercioExteriorMercanciaDescripcionesEspecificas object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output ComercioExteriorMercanciaDescripcionesEspecificas object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this Serializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, out ComercioExteriorMercanciaDescripcionesEspecificas obj, out System.Exception exception)
        {
            exception = null;
            obj = default(ComercioExteriorMercanciaDescripcionesEspecificas);
            try
            {
                obj = LoadFromFile(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }
        
        public static bool LoadFromFile(string fileName, out ComercioExteriorMercanciaDescripcionesEspecificas obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }
        
        public static ComercioExteriorMercanciaDescripcionesEspecificas LoadFromFile(string fileName)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
    }
}
#pragma warning restore
